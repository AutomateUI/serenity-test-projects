group = 'net.serenity-bdd'
apply plugin: "java"

repositories {
    mavenLocal()
    jcenter()
}

ext {
    serenityCoreVersion = "1.1.26"
    serenityJBehaveVersion = "1.6.0"
    serenityCucumberVersion = "1.1.5"
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}

gradle.startParameter.continueOnFailure = true

subprojects {
    apply plugin: "java"

    configurations.all {
        def dependencies = [
            "net.serenity-bdd:serenity-gradle-plugin": "${serenityCoreVersion}",
            "net.serenity-bdd:serenity-core"         : "${serenityCoreVersion}",
            "net.serenity-bdd:serenity-junit"        : "${serenityCoreVersion}",
            "net.serenity-bdd:serenity-screenplay"   : "${serenityCoreVersion}",
            "net.serenity-bdd:browse-the-web"        : "${serenityCoreVersion}",
            "net.serenity-bdd:serenity-cucumber"     : "${serenityCucumberVersion}",
            "net.serenity-bdd:serenity-jbehave"      : "${serenityJBehaveVersion}"]
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            if (dependencies["${details.requested.group}:${details.requested.name}"]) {
                details.useVersion dependencies["${details.requested.group}:${details.requested.name}"]
                println "dependecy replaced to: ${details.requested.group}:${details.requested.name}:${dependencies["${details.requested.group}:${details.requested.name}"]}"
            }
        }
    }

    buildscript {
        ext {
            serenityGradlePluginVersion = "1.1.26"
        }
        repositories {
            mavenLocal()
            jcenter()
        }
        configurations.all {
            def dependencies = [
                "net.serenity-bdd:serenity-gradle-plugin": "${serenityGradlePluginVersion}"]
            resolutionStrategy.eachDependency { DependencyResolveDetails details ->
                if (dependencies["${details.requested.group}:${details.requested.name}"]) {
                    details.useVersion dependencies["${details.requested.group}:${details.requested.name}"]
                    println "dependecy replaced to: ${details.requested.group}:${details.requested.name}:${dependencies["${details.requested.group}:${details.requested.name}"]}"
                }
            }
        }
    }

    task subProjectsCopyDeps(type: Copy) {
        from configurations.runtime + configurations.testCompile
        into project.projectDir.path + "/lib"
    }
}
